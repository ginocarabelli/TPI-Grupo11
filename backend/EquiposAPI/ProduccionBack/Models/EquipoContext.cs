// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ProduccionBack.Models;

public partial class EquipoContext : DbContext
{
    public EquipoContext(DbContextOptions<EquipoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<EquipoS> Equipos { get; set; }

    public virtual DbSet<EquiposLigasInfo> EquiposLigasInfos { get; set; }

    public virtual DbSet<Jugadores> Jugadores { get; set; }

    public virtual DbSet<JugadoresLog> JugadoresLogs { get; set; }

    public virtual DbSet<Ligas> Ligas { get; set; }

    public virtual DbSet<Partidos> Partidos { get; set; }

    public virtual DbSet<Personas> Personas { get; set; }

    public virtual DbSet<Posiciones> Posiciones { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<EquipoS>(entity =>
        {
            entity.HasKey(e => e.IdEquipo).HasName("PK__Equipos__EE01F88AFC24A253");

            entity.Property(e => e.IdEquipo)
                .ValueGeneratedNever()
                .HasColumnName("id_equipo");
            entity.Property(e => e.DirectorTecnico).HasColumnName("director_tecnico");
            entity.Property(e => e.IdLiga).HasColumnName("id_liga");
            entity.Property(e => e.NombreEquipo)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("nombre_equipo");

            entity.HasOne(d => d.DirectorTecnicoNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.DirectorTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_director_tecnico");
        });

        modelBuilder.Entity<EquiposLigasInfo>(entity =>
        {
            entity.HasKey(e => e.IdEquipoLigaInfo).HasName("PK__EquiposL__649DEDA2B3DBA7B1");

            entity.ToTable("EquiposLigasInfo");

            entity.Property(e => e.IdEquipoLigaInfo).HasColumnName("id_equipo_liga_info");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.PartidosG).HasColumnName("partidos_g");
            entity.Property(e => e.PartidosP).HasColumnName("partidos_p");
            entity.Property(e => e.Puntuacion)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("puntuacion");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquiposLigasInfos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_equipo_stats");
        });

        modelBuilder.Entity<Jugadores>(entity =>
        {
            entity.HasKey(e => e.IdJugador).HasName("PK__Jugadore__75BB83E22D20E748");

            entity.Property(e => e.IdJugador)
                .ValueGeneratedNever()
                .HasColumnName("id_jugador");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdPersona).HasColumnName("id_persona");
            entity.Property(e => e.IdPosicion).HasColumnName("id_posicion");
            entity.Property(e => e.NroCamiseta).HasColumnName("nro_camiseta");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.Jugadores)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_equipo");

            entity.HasOne(d => d.IdPersonaNavigation).WithMany(p => p.Jugadores)
                .HasForeignKey(d => d.IdPersona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_persona");

            entity.HasOne(d => d.IdPosicionNavigation).WithMany(p => p.Jugadores)
                .HasForeignKey(d => d.IdPosicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_posicion");
        });

        modelBuilder.Entity<JugadoresLog>(entity =>
        {
            entity.HasKey(e => e.IdJugadorLog).HasName("PK__Jugadore__C6528B9BE37E898C");

            entity.ToTable("JugadoresLog");

            entity.Property(e => e.IdJugadorLog).HasColumnName("id_jugador_log");
            entity.Property(e => e.FechaActualizacion).HasColumnName("fecha_actualizacion");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdJugador).HasColumnName("id_jugador");
            entity.Property(e => e.IdPosicion).HasColumnName("id_posicion");
            entity.Property(e => e.NroCamiseta).HasColumnName("nro_camiseta");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.JugadoresLogs)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_equipo_log");

            entity.HasOne(d => d.IdJugadorNavigation).WithMany(p => p.JugadoresLogs)
                .HasForeignKey(d => d.IdJugador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_jugador_log");

            entity.HasOne(d => d.IdPosicionNavigation).WithMany(p => p.JugadoresLogs)
                .HasForeignKey(d => d.IdPosicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_posicion_log");
        });

        modelBuilder.Entity<Ligas>(entity =>
        {
            entity.HasKey(e => e.IdLiga).HasName("PK__Ligas__99842D796D587C5D");

            entity.Property(e => e.IdLiga)
                .ValueGeneratedNever()
                .HasColumnName("id_liga");
            entity.Property(e => e.Liga)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("liga");
        });

        modelBuilder.Entity<Partidos>(entity =>
        {
            entity.HasKey(e => e.IdPartido).HasName("PK__Partidos__42D83E445BA04C4D");

            entity.Property(e => e.IdPartido).HasColumnName("id_partido");
            entity.Property(e => e.Arbitro).HasColumnName("arbitro");
            entity.Property(e => e.FechaPartido).HasColumnName("fecha_partido");
            entity.Property(e => e.HoraPartido).HasColumnName("hora_partido");
            entity.Property(e => e.IdLocal).HasColumnName("id_local");
            entity.Property(e => e.IdVisitante).HasColumnName("id_visitante");
            entity.Property(e => e.ResultadoLocal).HasColumnName("resultado_local");
            entity.Property(e => e.ResultadoVisitante).HasColumnName("resultado_visitante");

            entity.HasOne(d => d.ArbitroNavigation).WithMany(p => p.Partidos)
                .HasForeignKey(d => d.Arbitro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_arbitro");

            entity.HasOne(d => d.IdLocalNavigation).WithMany(p => p.PartidoIdLocalNavigations)
                .HasForeignKey(d => d.IdLocal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_equipo_local");

            entity.HasOne(d => d.IdVisitanteNavigation).WithMany(p => p.PartidoIdVisitanteNavigations)
                .HasForeignKey(d => d.IdVisitante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_equipo_visitante");
        });

        modelBuilder.Entity<Personas>(entity =>
        {
            entity.HasKey(e => e.IdPersona).HasName("PK__Personas__228148B08650D16E");

            entity.Property(e => e.IdPersona)
                .ValueGeneratedNever()
                .HasColumnName("id_persona");
            entity.Property(e => e.Dni).HasColumnName("dni");
            entity.Property(e => e.FechaNac).HasColumnName("fecha_nac");
            entity.Property(e => e.NombreCompleto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre_completo");
        });

        modelBuilder.Entity<Posiciones>(entity =>
        {
            entity.HasKey(e => e.IdPosicion).HasName("PK__Posicion__2234F8105CBA873D");

            entity.Property(e => e.IdPosicion).HasColumnName("id_posicion");
            entity.Property(e => e.Posicion)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("posicion");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuarios__4E3E04AD9B35AF85");

            entity.Property(e => e.IdUsuario)
                .ValueGeneratedNever()
                .HasColumnName("id_usuario");
            entity.Property(e => e.Contrasena)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("contrasena");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.Rol)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("rol");
            entity.Property(e => e.Usuario)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("usuario");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdEquipo)
                .HasConstraintName("fk_equipo_favorito");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}